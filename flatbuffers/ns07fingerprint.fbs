namespace fingerprint;

enum Namespace:uint32{
    Value=7
}

table RequestFingerActionManually{
    finger_index:uint16;
    action_index:uint16;
}

table ResponseFingerActionManually{
}

table RequestEnrollNewFinger{
    name:string;
}
table ResponseEnrollNewFinger{
    errorcode:uint16;
}
table NotifyEnrollNewFinger{
    name:string;
    index:uint16;
    step:uint8;
    errorcode:uint16;
}

table NotifyFingerDetected{
    //name:string; no, name is unknown; browser has to find out it!
    errorcode:uint16;
    index:uint16;
    score:uint8;
}

table RequestDeleteFinger{
    name:string;
}
table ResponseDeleteFinger{
    errorcode:uint16;
    name:string;
}

table RequestStoreFingerAction{
    finger_index:uint16;
    action_index:uint16;
}
table ResponseStoreFingerAction{}

table RequestStoreFingerSchedule{
    finger_index:uint16;
    schedule_name:string;
}
table ResponseStoreFingerSchedule{}

table RequestDeleteAllFingers{}
table ResponseDeleteAllFingers{
    errorcode:uint16;
}

table RequestCancelInstruction{}
table ResponseCancelInstruction{
    errorcode:uint16;
}

table RequestRenameFinger{
    old_name:string;
    new_name:string;
}
table ResponseRenameFinger{
    errorcode:uint16;
}

struct Uint8x32{
    v:[uint8:32];
}

table RequestFingerprintSensorInfo{}
table ResponseFingerprintSensorInfo{
    status:uint16; //Status register Contents of system status register 0 2
    library_size_max:uint16;//System identifier code Fixed value: 0x0000 1 2
    library_size_used:uint16;
    library_used_indices:Uint8x32;
    security_level:uint8;
    device_address:uint32;
    data_packet_size_code:uint8;
    baud_rate_times9600:uint8;
    alg_ver:string;
    fw_ver:string;
}


table RequestFingers{}

table Finger{
    name:string;
    index:uint16;
    schedule_name:string;
    action_index:uint16;
}

table ResponseFingers{
    schedule_names:[string];
    fingers:[Finger];
}



union Requests{
    RequestFingers,
    RequestFingerprintSensorInfo,
    RequestRenameFinger,
    RequestCancelInstruction,
    RequestDeleteAllFingers,
    RequestStoreFingerSchedule,
    RequestStoreFingerAction,
    RequestDeleteFinger,
    RequestEnrollNewFinger,
    RequestFingerActionManually,
}

union Responses{
    ResponseFingerActionManually,
    ResponseEnrollNewFinger,
    NotifyEnrollNewFinger,
    NotifyFingerDetected,
    ResponseDeleteFinger,
    ResponseStoreFingerAction,
    ResponseStoreFingerSchedule,
    ResponseDeleteAllFingers,
    ResponseCancelInstruction,
    ResponseRenameFinger,
    ResponseFingerprintSensorInfo,
    ResponseFingers,
}

table RequestWrapper{
    request:Requests;
}

table ResponseWrapper{
    response:Responses;
}

